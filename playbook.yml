---
- name: Install Kubeadm
  hosts: all
  become: yes
  vars:
    ubuntu_min_version: "18.04"  # Minimum supported Ubuntu version

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
      tags:
        - docker
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Add Docker GPG key if not present
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags:
        - docker
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
        update_cache: yes
      tags:
        - docker
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Install necessary packages
      apt:
        name:
          - apt-transport-https
          - curl
          - software-properties-common
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Add Kubernetes GPG key if not present
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      tags:
        - kubernetes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        update_cache: yes
      tags:
        - kubernetes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Install Kubeadm, Kubelet, and Kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
      tags:
        - kubernetes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')

    - name: Hold the Kubernetes packages at the current version
      apt:
        name: "{{ item }}"
        state: held
      loop:
        - kubelet
        - kubeadm
        - kubectl
      tags:
        - kubernetes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare(ubuntu_min_version, '>=')
